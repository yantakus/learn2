generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Video {
  ytId        String     @id
  snippet     Json
  language    Language   @relation(fields: [languageId], references: [id])
  languageId  Int
  complexity  Complexity
  topics      Topic[]    @relation(references: [id])
  tags        Tag[]      @relation(references: [id])
  bookmarkers User[]     @relation("UserBookmarks", references: [uid])
  votes       Vote[]
  voteScore   Int?       @default(0)
  uploader    User       @relation("UserVideos", fields: [uploaderId], references: [uid])
  uploaderId  String
}

model User {
  uid       String  @id
  videos    Video[] @relation("UserVideos")
  bookmarks Video[] @relation("UserBookmarks")
  votes     Vote[]
}

model Vote {
  id       Int      @default(autoincrement()) @id
  parent   Video    @relation(fields: [parentId], references: [ytId])
  parentId String
  user     User     @relation(fields: [userId], references: [uid])
  userId   String
  type     VoteType
}

enum VoteType {
  UP
  DOWN
}

model Topic {
  id     Int     @default(autoincrement()) @id
  value  String  @unique
  text   String  @unique
  videos Video[] @relation(references: [ytId])
}

model Tag {
  id     Int     @default(autoincrement()) @id
  value  String  @unique
  text   String  @unique
  videos Video[] @relation(references: [ytId])
}

model Language {
  id     Int     @default(autoincrement()) @id
  value  String  @unique
  text   String  @unique
  parent Video[]
}

enum Complexity {
  ELEMENTARY
  BASIC
  ADVANCED
  EXPERT
}