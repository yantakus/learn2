### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Mutation {
  createDraft(content: String, title: String!): Post!
  createOneUser(data: UserCreateInput!): User!
  deletePost(id: Int!): Post
  publish(id: Int): Post
}

type Post {
  author: User
  content: String
  id: Int!
  published: Boolean!
  title: String!
}

input PostCreateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  create: [PostCreateWithoutAuthorInput!]
}

input PostCreateWithoutAuthorInput {
  content: String
  published: Boolean
  title: String!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  filterPosts(searchString: String): [Post!]!
  me: User
  post(id: Int): Post
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, skip: Int): [User!]!
}

type User {
  posts: [Post!]!
  uid: String!
}

input UserCreateInput {
  posts: PostCreateManyWithoutAuthorInput
  uid: String!
}

input UserWhereUniqueInput {
  uid: String
}
